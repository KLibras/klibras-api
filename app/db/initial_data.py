import logging
from sqlalchemy.ext.asyncio import AsyncSession
from sqlalchemy.future import select

from app.models.sign import Sign
from app.models.module import Module

logger = logging.getLogger(__name__)

async def create_initial_data(db: AsyncSession):
    """
    Verifica e cria os dados iniciais (m√≥dulos e sinais) se o banco estiver vazio.
    """
    # 1. Verifica se j√° existem m√≥dulos para evitar duplicatas
    result = await db.execute(select(Module).limit(1))
    if result.scalars().first():
        logger.info("Dados iniciais j√° existem. Ignorando a cria√ß√£o.")
        return

    logger.info("Criando dados iniciais para Sinais e M√≥dulos...")

    try:
        # 2. Crie os objetos de Sinais (Signs)
        sign_bom_dia = Sign(
        name="Bom dia",
        desc="Este √© um sinal composto por duas partes: <b>BOM</b> e <b>DIA</b>.<br><br>" \
            "<b>BOM:</b> Com a palma virada para voc√™, junte as pontas dos dedos em frente √† boca. Mova a m√£o para frente, abrindo e espalhando os dedos.<br>" \
            "<b>DIA:</b> Em seguida, com a m√£o em 'D' (indicador para cima, outros dedos em c√≠rculo com o polegar), fa√ßa um arco da direita para a esquerda, simbolizando o sol.",
        videoUrl="bom_dia",
        pontos=10
            )

        sign_obrigado = Sign(
            name="Obrigado",
            desc="Este sinal √© realizado com as duas m√£os.<br><br>" \
                "Posicione a m√£o direita tocando o queixo e a m√£o esquerda tocando a testa. Depois, mova <b>ambas as m√£os</b> para a frente, em um gesto de oferecimento.",
            videoUrl="obrigado",
            pontos=10
        )

        sign_tudo_bem = Sign(
            name="Tudo bem?",
            desc="Este sinal √© feito em duas partes, unindo <b>BOM</b> e o gesto de <b>JOIA</b>.<br><br>" \
                "<b>BOM:</b> Junte as pontas dos dedos em frente √† boca com a palma para voc√™, e ent√£o abra a m√£o para frente.<br>" \
                "<b>JOIA:</b> Logo em seguida, mude a configura√ß√£o da m√£o para o sinal de 'joia' (polegar para cima).",
            videoUrl="tudo_bem",
            pontos=15
        )

        sign_qual_seu_nome = Sign(
            name="Qual seu nome?",
            desc="O sinal para 'Qual seu nome?' √© feito da seguinte forma:<br><br>" \
                "Com a m√£o direita, levante os dedos <b>indicador e m√©dio</b>. Fa√ßa um movimento de meia-lua com a m√£o, da esquerda para a direita.",
            videoUrl="qual_seu_nome",
            pontos=15
        )

        

        db.add_all([sign_bom_dia, sign_obrigado, sign_tudo_bem, sign_qual_seu_nome])
        await db.flush() # Usa flush para obter os IDs antes do commit

        # 3. Crie os M√≥dulos e associe os Sinais a eles
        module_cumprimentos = Module(
            name="introducao",
            signs=[sign_bom_dia, sign_obrigado, sign_tudo_bem, sign_qual_seu_nome]
        )
        
        db.add(module_cumprimentos)

        
        await db.commit()
        logger.info("Dados iniciais criados com sucesso! üå±")

    except Exception as e:
        logger.error("Falha ao criar dados iniciais: %s", e)
        await db.rollback()